clearvars; clc;

if ispc    % On Windows
    basedir = 'C:/Github/';
    addpath([basedir,'']);
%    addpath([basedir,'pipeline/01_pre_pro/00_data/']);
    addpath([basedir,'OceanMesh2D/']);
    addpath([basedir,'OceanMesh2D/m_map/']);
    addpath([basedir,'OceanMesh2D/utilities/']);
    addpath([basedir,'OceanMesh2D/datasets/']);
    addpath([basedir,'OceanMesh2D/datasets/Tokyo_dem/datasets']);
    addpath([basedir,'OceanMesh2D/datasets/Tokyo_Bay_shp/Tokyo_coastline/Futtsu-coastline']);
    addpath([basedir,'OceanMesh2D/datasets/GSHHS_shp/f/']);
    addpath([basedir,'OceanMesh2D/datasets/GSHHS_shp/l/']);
    addpath([basedir,'fvcomtoolbox/fvcom_prepro/']);
    addpath([basedir,'fvcomtoolbox/utilities/']);
%    addpath([basedir,'air-sea/'])
%    addpath([basedir,'map_lab_full/m_map/']);
%    addpath([basedir,'map_lab_features/coastlines/gshhg-shp-2.3.7/GSHHS_shp/f']);
%    addpath([basedir,'map_lab_features/coastlines/gshhg-shp-2.3.7/GSHHS_shp/l']);
end

%% STEP 1: set mesh extents and set parameters for mesh. 
%% The greater US East Coast and Gulf of Mexico region
x_bond_01 = [157.4634361 158.84262217 160.046858 161.07987092 ...
         161.94757837 162.65742188 163.21770287 163.63704393 ...
         163.92386584 164.08625707 164.1323057 164.06882521 ...
         163.9009549 163.63627547 163.31281843 162.89825466 ...
         162.38857843 161.80134206 161.13903484 160.4052709 ...
         159.60336662 158.7360147 157.80598566 156.81590455 ...
         155.7687459 154.66746366 153.5151905 152.3154099 ...
         151.0718658 149.78866673 148.4702309 147.12135316 ...
         145.74715292 144.35301788 142.94462003 141.52778842 ...
         140.10846886 138.69263968 137.2862313 135.89504337 ...
         134.52470652 133.18055169 131.86766327 130.59072034 ...
         129.35412832 128.16190388 127.01767503 125.92498131 ...
         124.88679107 123.90615375 122.98581257 122.12855282 ...
         121.60387397 116.64257669 158.59463098 167.27851682 ...
         157.4634361];
y_bond_01 = [51.36354136 50.35540912 49.27890879 48.14482943 ...
         46.96329793 45.74371019 44.4946652 43.2239559 ...
         41.93859546 40.64492778 39.34870289 38.0551143 ...
         36.76910533 35.56167205 34.36768078 33.12965026 ...
         31.91772707 30.7320848 29.57667543 28.45502315 ...
         27.37062929 26.32729387 25.32881846 24.37921688 ...
         23.48234609 22.64223232 21.86295783 21.14846084 ...
         20.50262818 19.92912188 19.4314301 19.01266254 ...
         18.67552551 18.42237308 18.25486888 18.17421142 ...
         18.18096748 18.27508101 18.45587251 18.7220402 ...
         19.07182143 19.5027674 20.01215433 20.59669911 ...
         21.25297733 21.97724182 22.76552456 23.61401919 ...
         24.51851667 25.47512814 26.47984282 27.52881366 ...
         28.22438211 39.00405273 73.05163401 62.25276725 ...
         51.36354136];
bbox_01      = [x_bond_01',y_bond_01'];
min_el_01    = 10e3;  	   % minimum resolution in meters.
max_el_01    = 50e3; 	   % maximum resolution in meters.
wl_01        = 30;         % 60 elements resolve M2 wavelength.
dt_01        = 0;          % Automatically set timestep based on nearshore res
grade_01     = 0.25;       % mesh grade in decimal percent. 
R_01         = 3; 		   % Number of elements to resolve feature.
slp_01       = 50;         % 2*pi/number of elements to resolve slope
fl_01        = -50;        % use filter equal to Rossby radius divided by 50
  
%% STEP 2: specify geographical datasets and process the geographical data
%% to be used later with other OceanMesh classes...
%dem_01       = 'depth_0270-03.nc';
 dem_srtm       = 'SRTM15_V2.3_sliced.nc';
coastline_gshhs = 'GSHHS_f_L1'; 
% coastline = 'GSHHS_f_L1';
gdat_01 = geodata('shp',coastline_gshhs,...
                  'dem',dem_srtm,...
                  'h0',min_el_01,...
                  'bbox',bbox_01);
            
%% STEP 3: create an edge function class
fh_01 = edgefx('geodata',gdat_01,...
             'fs',R_01,'wl',wl_01,...
             'slp',slp_01,'fl',fl_01,...
             'max_el',max_el_01,...
             'dt',dt_01,'g',grade_01);


x_bond_02 = [139.142156 139.142156	139.144724 139.152351 139.164815 ...
    139.18178	139.202839	139.227552	139.25548	139.286203 ...
    139.31934	139.354542	139.391505	139.429958	139.469663 ...
    139.510408	139.552007	139.594291	139.637105	139.680308 ...
    139.723765	139.767348	139.810932	139.854389	139.897592 ...
    139.940406	139.98269	140.024289	140.065034	140.104739 ...
    140.143192	140.180155	140.215357	140.248493	140.279217 ...
    140.307145	140.331858	140.352917	140.369882	140.382346 ...
    140.389973	140.392541	140.392541	139.142156];
y_bond_02 = [35.859592	 35.225989	35.182486  35.139579  35.097818 ...
    35.057672  35.019512  34.983607  34.95014  34.919216 ...
    34.890891  34.865177  34.842062  34.82152  34.803513 ...
    34.788004  34.774954  34.764328  34.756096 34.750234 ...
    34.746724  34.745556  34.746724  34.750234 34.756096 ...
    34.764328  34.774954  34.788004  34.803513 34.82152 ...
    34.842062  34.865177  34.890891  34.919216 34.95014	...
    34.983607  35.019512  35.057672  35.097818 35.139579 ...
    35.182486  35.225989  35.859592	 35.859592];
bbox_02       = [x_bond_02',y_bond_02'];
min_el_02    = 4e2;  	   % minimum resolution in meters.
max_el_02    = 20e3; 	   % maximum resolution in meters. 
wl_02        = 30;         % 60 elements resolve M2 wavelength.
dt_02        = 0;          % Automatically set timestep based on nearshore res
grade_02     = 0.25;       % mesh grade in decimal percent. 
R_02         = 3; 		   % Number of elements to resolve feature.
slp_02       = 50;         % 2*pi/number of elements to resolve slope
fl_02        = -50;        % use filter equal to Rossby radius divided by 50
  
%% STEP 2: specify geographical datasets and process the geographical data
%% to be used later with other OceanMesh classes...
%dem_01       = 'depth_0270-03.nc';
coastline_02 = 'coastline_2';
% coastline = 'GSHHS_f_L1';
gdat_02 = geodata('shp',coastline_02,...
                  'dem',dem_srtm,...
                  'h0',min_el_02,...
                  'bbox',bbox_02);
            
%% STEP 3: create an edge function class
fh_02 = edgefx('geodata',gdat_02,...
             'fs',R_02,'wl',wl_02,...
             'slp',slp_02,'fl',fl_02,...
             'max_el',max_el_02,...
             'dt',dt_02,'g',grade_02);
          
%% Repeat STEPS 1-3 for a high resolution domain for High Res New York Part
min_el_03    = 1e2;  		% minimum resolution in meters.
max_el_03    = 10e2; 		% maximum resolution in meters. 
wl_03        = 10;
dt_03        = 0;
grade_03     = 0.35;       % mesh grade in decimal percent. 
R_03         = 6; 		   % Number of elements to resolve feature.
slp_03       = 100;         % 2*pi/number of elements to resolve slope
fl_03        = -200;

coastline_03 = 'coastline_2'; 
dem_03       = 'depth_0090-05+06+07.nc';

x_bond_03 = [140.1708 140.1727 139.6147 139.6147 139.6478 ...
             139.6481 139.6814 139.7542 139.7632 139.8618 ...
             140.1708];
y_bond_03 = [35.2441 35.8491 35.8451 35.2763 35.2288 ...
             35.1567 35.1464 34.9783 34.9657 34.9657 ...
             35.2441];
bbox_03      = [x_bond_03',y_bond_03'];

gdat_03 = geodata('shp',coastline_03,...
                  'dem',dem_03,...
                  'h0',min_el_03,...
                  'bbox',bbox_03);
              
fh_03 = edgefx('geodata',gdat_03,...
               'fs',R_03,'wl',wl_03,...
               'slp',slp_03,'fl',fl_03,...
               'max_el',max_el_03,...
               'dt',dt_03,'g',grade_03);
           
%% Repeat STEPS 1-3 for a high resolution domain for High Res New York Part
min_el_04    = 1e2;  		% minimum resolution in meters.
max_el_04    = 10e2; 		% maximum resolution in meters. 
wl_04        = 10;
dt_04        = 0;
grade_04     = 0.25;       % mesh grade in decimal percent. 
R_04         = 3; 		   % Number of elements to resolve feature.
slp_04       = 50;         % 2*pi/number of elements to resolve slope
fl_04        = -10;

coastline_04 = 'coastline_2'; 
dem_04       = dem_03;

x_bond_04 = [139.6186 139.7978 140.1562 140.1590 139.9604 ...
             139.9070 139.8663 139.7839 139.7461 139.6341 ...
             139.6186 139.6186];
y_bond_04 = [35.5562 35.7823 35.7849 35.4909 35.2584 ...
             35.2584 35.3126 35.3127 35.2562 35.2562 ...
             35.2763 35.5562];
bbox_04      = [x_bond_04',y_bond_04'];

gdat_04 = geodata('shp',coastline_04,...
                  'dem',dem_04,...
                  'h0',min_el_04,...
                  'bbox',bbox_04);
              
fh_04 = edgefx('geodata',gdat_04,...
               'fs',R_04,'wl',wl_04,...
               'slp',slp_04,'fl',fl_04,...
               'max_el',max_el_04,...
               'dt',dt_04,'g',grade_04);

min_el_05    = 20;  		% minimum resolution in meters.
max_el_05    = 50; 		% maximum resolution in meters. 
max_el_ns_05 = 25;
wl_05        = 10;
dt_05        = 0;
grade_05     = 0.25;       % mesh grade in decimal percent. 
R_05         = 3; 		   % Number of elements to resolve feature.
slp_05       = 50;         % 2*pi/number of elements to resolve slope
fl_05        = -10;

coastline_05 = 'coastline_2'; 
dem_05       = dem_03;

x_bond_05 = [139.837798 139.853990 139.810209 139.805277 139.808794 ...
             139.819634 139.837798];
y_bond_05 = [35.340557 35.324475 35.312065 35.321713 35.329870 ...
             35.336075 35.340557];
bbox_05      = [x_bond_05',y_bond_05'];

gdat_05 = geodata('shp',coastline_05,...
                  'dem',dem_05,...
                  'h0',min_el_05,...
                  'bbox',bbox_05);
              
fh_05 = edgefx('geodata',gdat_05,...
               'fs',R_05,'wl',wl_05,...
               'slp',slp_05,'fl',fl_05,...
               'max_el',max_el_05,'max_el_ns',max_el_ns_05,...
               'dt',dt_05,'g',grade_05);

%% STEP 4: Pass your edgefx class object along with some meshing options 
%% and build the mesh...
mshopts = meshgen(...
                  'ef',{fh_01 fh_02 fh_03 fh_04 fh_05},...
                  'bou',{gdat_01 gdat_02 gdat_03 gdat_04 gdat_05},...
                  'plot_on',1,...
                  'proj','trans');
                  % 'proj','lam',...
mshopts = mshopts.build; 

%% Plot and save the msh class object/write to fort.14
m = mshopts.grd; % get out the msh object
m = interp(m,{gdat_01 gdat_02 gdat_03 gdat_04 gdat_05},'mindepth',0.01); % interpolate bathy to the mesh with minimum depth of 1 m
%m = make_bc(m,'inner',21);
m = make_bc(m,'auto',gdat_01,'both');               % make the nodestring boundary conditions
%m = make_bc(m,'outer',0);   %vstart=,2998, vend=3162, elevation:2
% m = make_bc(m,'auto',gdat_01,'depth',20);
%plot(m,'bd',1); % plot on native projection with nodestrings
%plot(m,'b',1); % plot bathy on native projection
%plot(m,'reso',1,[],[],[10, 0 10e3]) % plot the resolution
plot(m,'type','bd');
plot(gdat_01, 'dem');
save('tb_futtsu20220311','m');  
write(m,'tb_futtsu20220311');